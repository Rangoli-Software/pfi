<script>
	var sku = thisProduct.SKU;
	pfiavG.pageIdx.page['SKU'] = sku;
	pfiavG.pageIdx.page['SKUvid'] = sku;
	browseInfo = createBrowseInfo(
		[
			[
				[origin, '/journey/artwear.html']
			],
			[
				[ramp, '/look/bc.html']
			]
		],
		[1, 1],
		null
	);
	const productCatalog = pfiavG.productCatalog;

	var factory = thisProduct.getFactory(sku);
	var prodJSON = createUIProductJSON(sku, factory.base, thisProduct.prodData, thisProduct.sizing);

	var detailViewer = createHTMLViewer(prodJSON.skuInfo.garmentDetails);
	var storyViewer = browseInfo.getStoryViewer();
	var colSelData = createColSelData(factory.base, []);
	var modelTxt = thisProduct.modelTxt !== undefined ? thisProduct.modelTxt : artwear.modelTxt;
	var sizeSelector = createSizeSelector(prodJSON.skuInfo.sizes, pfiavG.sizeModalInfo.getToggleHTML(), "onSizeChange", modelTxt, "Size");
	var numSizes = prodJSON.skuInfo.sizes.length;
	var viewerFactory = {
		prodJSON: prodJSON,
		createPre: function() {
			return createEmptyViewer();
		},
		createBase: function(shop) {
			return createBasePanelr(shop, null, this.prodJSON.product);
		},
		create: function() {
			return createCatenatedViewer([detailViewer, storyViewer]);
		},
		createNavHelper: function() {
			return createNavHelper(this.prodJSON, artwear.categorizer, artwear.catalog.title);
		},
		createList: function() {
			return createUniqueItemList(factory.listData, factory);
		},
		createCategorySelector: function() {
			if (numSizes === 1) {
				var selCategory = createColourCategories(colSelData, factory);
				return createColourCategorySelector(selCategory);
			} else {
				var selCategory = createColourCategories(colSelData, factory);
				return createColourSizeCategorySelector(selCategory, sizeSelector);
			}
		},
		createVarSel: function() {
			return {
				getSelectedIdx: function() {
					return 0;
				}
			}
		},
		createPanelRVs: function() {
			var itemsRVlist = [SelChangeReason.colorCategoryChange, SelChangeReason.currencyChange];
			var hasSizes = prodJSON.skuInfo.sizes.length > 1;
			if (hasSizes) {
				itemsRVlist.push(SelChangeReason.sizeChange)
			}
			return createPanelRVs(
				SelChangeReason.createValidator(itemsRVlist),
				SelChangeReason.createValidator([SelChangeReason.colorChange]),
				SelChangeReason.createValidator([SelChangeReason.currencyChange]),
				SelChangeReason.createValidator([SelChangeReason.unitChange])
			);
		}
	};
	var cardCreator = thisProduct.createCardCreator();
	var componentGenerator = createComponentGenerator(
		factory, prodJSON, viewerFactory, sizeSelector,
		true,
		cardCreator,
		0
	);

	var itemsComponent = componentGenerator.createUIC(loadShopWithParam());
	var itemCategorySelector = itemsComponent.itemCategorySelector;
	var sizeSelector = itemsComponent.sizeSelector;
	const pageComponent = createUIPageComponent(productCatalog, itemsComponent);

	var productComponent = itemsComponent.productComponent;
	var dimensioner = productComponent.sizePanelr.dimensioner;

	document.write(productComponent.getSizeModal());

</script>
<section>
	<div class="container">
		<script>
			document.write(productComponent.createProductDiv(0, 0));

		</script>
	</div>
</section>
<h6>Buy Now</h6>
<p></p>
<form>
	<div class="row align-items-center">
		<div class="col-12 text-center">
			<script>
				document.write(sizeSelector.createDiv(0));

			</script>
		</div>
	</div>
</form>
<script>
	document.write(itemsComponent.createDiv());

</script>
<script>
	document.write(renderProductDetails(
		'<p>' + prodJSON.skuInfo.description + '</p>',
		null,
		artwear.washcareHTML,
		thisProduct.shippingHTML));

</script>
